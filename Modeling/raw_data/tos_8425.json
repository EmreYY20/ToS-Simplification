{"error": 448, "message": "OK", "parameters": {"id": 8425, "name": "FluffyChat", "created_at": "2023-05-30 17:50:01.472376", "updated_at": "2023-05-30 22:02:22.580034", "wikipedia": null, "keywords": null, "related": null, "slug": "fluffychat", "is_comprehensively_reviewed": false, "rating": 32, "status": null, "image": "https://s3.tosdr.org/logos/8425.png", "url": "fluffychat.im", "documents": [{"id": 16361, "name": "PRIVACY", "url": "https://gitlab.com/famedly/fluffychat/-/raw/main/PRIVACY.md", "xpath": "//body", "text": "# Privacy FluffyChat is available on Android, iOS and as a web version.\nDesktop versions for Windows, Linux and macOS may follow.\n* [Matrix](#matrix)\n* Sentry\n* [Database](#database)\n* [Encryption](#encryption)\n* [App Permissions](#app-permissions)\n* [Push Notifications](#push-notifications)\n* [Stories](#stories) ## Matrix&lt;a id=\"matrix\"/&gt.\nFluffyChat uses the Matrix protocol.\nThis means that FluffyChat is just a client that can be connected to any compatible matrix server.\nThe respective data protection agreement of the server selected by the user then applies.\nFor convenience, one or more servers are set as default that the FluffyChat developers consider trustworthy.\nThe developers of FluffyChat do not guarantee their trustworthiness.\nBefore the first communication, users are informed which server they are connecting to.\nFluffyChat only communicates with the selected server, with sentry.io if enabled and with [OpenStreetMap](https://openstreetmap.org) to display maps.\nMore information is available at: [https://matrix.org](https://matrix.org) ## Database&lt;a id=\"database\"/&gt.\nFluffyChat caches some data received from the server in a local database on the device of the user.\nMore information is available at: [https://pub.dev/packages/hive](https://pub.dev/packages/hive) ## Encryption&lt;a id=\"encryption\"/&gt.\nAll communication of substantive content between Fluffychat and any server is done in secure way, using transport encryption to protect it.\nFluffyChat is able to use End-To-End-Encryption as a tech preview.\n## App Permissions&lt;a id=\"app-permissions\"/&gt.\nThe permissions are the same on Android and iOS but may differ in the name.\nThis are the Android Permissions: #### Internet Access\nFluffyChat needs to have internet access to communicate with the Matrix Server.\n#### Vibrate\nFluffyChat uses vibration for local notifications.\nMore informations about this are at the used package:\n[https://pub.dev/packages/flutter_local_notifications](https://pub.dev/packages/flutter_local_notifications) #### Record Audio\nFluffyChat can send voice messages in a chat and therefore needs to have the permission to record audio.\n#### Write External Storage\nThe user is able to save received files and therefore app needs this permission.\n#### Read External Storage\nThe user is able to send files from the device's file system.\n#### Location\nFluffyChat makes it possible to share the current location via the chat.\nWhen the user shares their location, FluffyChat uses the device location service and sends the geo-data via Matrix.\n## Push Notifications&lt;a id=\"push-notifications\"/&gt.\nFluffyChat uses the Firebase Cloud Messaging service for push notifications on Android and iOS.\nThis takes place in the following steps:\n1.\nThe matrix server sends the push notification to the FluffyChat Push Gateway\n2.\nThe FluffyChat Push Gateway forwards the message in a different format to Firebase Cloud Messaging\n3.\nFirebase Cloud Messaging waits until the user's device is online again\n4.\nThe device receives the push notification from Firebase Cloud Messaging and displays it as a notification The source code of the push gateway can be viewed here:\n[https://gitlab.com/famedly/services/famedly-push-gateway](https://gitlab.com/famedly/services/famedly-push-gateway) `event_id_only` is used as the format for the push notification.\nA typical push notification therefore only contains:\n- Event ID\n- Room ID\n- Unread Count\n- Information about the device that is to receive the message A typical push notification could look like this:\n```json\n{ \"notification\": { \"event_id\": \"$3957tyerfgewrf384\", \"room_id\": \"!slw48wfj34rtnrf:example.com\", \"counts\": { \"unread\": 2, \"missed_calls\": 1 }, \"devices\": [ { \"app_id\": \"chat.fluffy.fluffychat\", \"pushkey\": \"V2h5IG9uIGVhcnRoIGRpZCB5b3UgZGVjb2RlIHRoaXM/\", \"pushkey_ts\": 12345678, \"data\": {}, \"tweaks\": { \"sound\": \"bing\" } } ] }\n}\n``` FluffyChat sets the `event_id_only` flag at the Matrix Server.\nThis server is then responsible to send the correct data.\n## Stories&lt;a id=\"stories\"/&gt.\nFluffyChat supports stories which is a feature similar to WhatsApp status or Instagram stories.\nHowever it is just a different GUI for the same room-related communication.\nMore information about the feature can be found here: https://github.com/krillefear/matrix-doc/blob/main/proposals/3588-stories-as-rooms.md Stories are basically: - End to end encrypted rooms\n- Read-only rooms with only one admin who can post stuff (while there is no technical limitation to have multiple admins) By default: - The user has to invite all contacts manually to a story room\n- The user can only invite contacts (matrix users the user shares a DM room with) to the story room\n- The story room is created when the first story is posted\n- User can mute and leave story rooms The user is informed in the app that in theory all contacts can see each other in the story room.\nThe user must give consent here.\nHowever the user is at any time able to create a group chat and invite all of their contacts to this chat in any matrix client which has the same result.\n", "created_at": "2023-05-30 17:50:01.502594", "updated_at": "2023-05-30 17:50:32.770636"}], "points": [], "urls": ["fluffychat.im"]}}